const pyramid = [[3], [7, 4], [2, 4, 6], [8, 5, 9, 3]];


class Node{
    constructor(val){
        this.val = val;
        this.left = null;
        this.right = null;
    }
}

function longestSlideDown(pyramid){
    let nodes = [];
    let nodesPivot = 0;

    for (let i = 0; i < pyramid.length; i++) { 
        if (i !== 0) nodesPivot += i - 1;
        let pivot = nodesPivot;
        
        for (let j = 0; j < pyramid[i].length; j++) {
                     
            if(i === 0){
                nodes.push(new Node(pyramid[i][j]));
                continue;
            }
            
            let currentNode = new Node(pyramid[i][j]);
            if( j == 0 ){
                nodes[pivot].left = currentNode;
            }else{
                nodes[pivot - 1].right = currentNode;    
                if(j < pyramid[i].length - 1) nodes[pivot].left = currentNode;
            }
            nodes.push(currentNode);
            pivot++;
        }
    }

    return maxRoute(nodes[0]);
}   

function maxRoute (root) {

    if(root === null) return -Infinity;

    if(root.right === null && root.left === null) return root.val;
    
    return Math.max(root.val + maxRoute(root.left), root.val + maxRoute(root.right));
}



const expected = [ 650, 528, 927, 917, 620, 301, 530, 323, 419, 730, 486, 61, 818, 155, 311, 892, 732, 23, 484, 20, 64, 317, 54, 501, 233, 849, 909, 326, 69, 11, 396, 412, 533, 252, 746, 591, 728, 63, 270, 459, 149, 129, 676, 980, 441, 496, 704, 116, 571, 721, 529, 851, 510, 854, 855, 873, 352, 124, 548, 949, 723, 263, 825, 547, 109, 4, 448, 747, 200, 148, 24, 596, 406, 392, 530, 335, 233, 412, 833, 226, 72, 105, 305, 980, 403, 740, 512, 991, 724, 640, 205, 260, 605, 306, 661, 510, 175, 442, 850, 922, 166, 994, 518, 126, 928, 236, 111, 36, 817, 556, 422, 673, 97, 385, 350, 371, 695, 152, 530, 869, 702, 33, 749, 187, 664, 629, 753, 456, 37, 19, 53, 827, 378, 783, 599, 820, 873, 809, 58, 401, 881, 995, 645, 723, 370, 451, 550, 442, 285, 46, 905, 67, 642, 188, 632, 840, 651, 993, 154, 813, 167, 696, 681, 66, 705, 945, 157, 187, 642, 77, 783, 850, 289, 752, 745, 940, 892, 95, 91, 951, 820, 255, 120, 561, 957, 30, 982, 987, 881, 151, 271, 338, 414, 610, 462, 640, 300, 141, 822, 254, 93, 523, 847, 173, 878, 67, 598, 460, 762, 316, 84, 194, 971, 517, 854, 57, 221, 383, 686, 9, 995, 622, 74, 736, 909, 154, 918, 742, 929, 226, 77, 930, 431, 972, 770, 87, 133, 631, 721, 896, 803, 386, 216, 446, 568, 34, 273, 954, 667, 919, 140, 685, 986 ];

const actual = [ 650, 528, 927, 917, 620, 301, 530, 323, 419, 730, 486, 61, 818, 155, 311, 892, 732, 23, 484, 20, 64, 317, 54, 501, 233, 155, 849, 311, 909, 326, 69, 11, 396, 412, 533, 252, 746, 591, 728, 63, 270, 459, 149, 129, 676, 980, 441, 496, 704, 116, 571, 721, 529, 851, 510, 854, 855, 873, 352, 124, 548, 949, 723, 263, 825, 547, 109, 4, 448, 747, 200, 148, 24, 596, 406, 392, 530, 335, 233, 412, 833, 226, 72, 105, 305, 980, 403, 740, 512, 991, 724, 640, 205, 260, 605, 306, 661, 510, 175, 442, 850, 922, 166, 994, 518, 126, 928, 236, 111, 36, 817, 556, 422, 673, 97, 385, 350, 371, 695, 152, 530, 869, 702, 33, 749, 187, 664, 629, 753, 456, 37, 19, 53, 827, 378, 783, 599, 820, 873, 456, 809, 58, 401, 881, 995, 645, 723, 370, 451, 550, 442, 285, 46, 905, 67, 642, 188, 632, 840, 651, 993, 154, 813, 167, 696, 681, 66, 705, 945, 157, 187, 642, 77, 783, 850, 289, 752, 745, 940, 892, 95, 91, 951, 820, 255, 120, 561, 957, 30, 982, 987, 881, 151, 271, 338, 414, 610, 462, 640, 300, 141, 822, 254, 93, 523, 847, 173, 878, 67, 598, 460, 762, 316, 84, 194, 971, 517, 854, 57, 221, 383, 686, 9, 995, 622, 74, 736, 909, 154, 918, 742, 929, 226, 77, 930, 431, 972, 770, 87, 133, 631, 721, 896, 803, 386, 216, 446, 568, 34, 273, 954, 667, 919, 140, 685, 986 ];
    
for (let i = 0; i < array.length; i++) {
    const element = array[i];
}


console.log(expected.length);
console.log(actual.length);